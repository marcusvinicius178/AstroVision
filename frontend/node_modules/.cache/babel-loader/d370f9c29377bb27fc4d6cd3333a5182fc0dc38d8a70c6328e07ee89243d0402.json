{"ast":null,"code":"var _jsxFileName = \"/home/madu/Documentos/spacead/src/Pages/NavegacaoFree/TelaNavegacao.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport \"./TelaNavegacao.css\";\nimport Modal from \"./Modal\"; // 1. Importa o componente Modal\n\n// 2. Definição dos planetas com coordenadas relativas (0 a 1000 para facilitar o posicionamento)\n// As coordenadas reais serão calculadas em tempo de execução\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLANETS = [{\n  id: 1,\n  name: \"Nebula Prime\",\n  src: \"/planetavermelho.png\",\n  // Posição relativa superior-esquerda: 10% da largura, 15% da altura\n  relativeX: 100,\n  relativeY: 150\n}, {\n  id: 2,\n  name: \"Aetheria\",\n  src: \"/planetaclaro.png\",\n  // Posição relativa inferior-direita: 85% da largura, 80% da altura\n  relativeX: 850,\n  relativeY: 800\n}\n// Você pode adicionar mais planetas aqui\n];\nconst PROXIMITY_RADIUS = 120; // Raio para considerar o clique/proximidade\n\n// Altura e Largura do foguete (para centralizar o cálculo)\nconst ROCKET_SIZE = 100;\nfunction TelaNavegacao() {\n  _s();\n  const [rocketPos, setRocketPos] = useState({\n    x: window.innerWidth / 2 - ROCKET_SIZE / 2,\n    y: window.innerHeight / 2 - ROCKET_SIZE / 2\n  });\n\n  // Estado para controlar a Modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState({});\n\n  // 3. Estado para armazenar as coordenadas absolutas dos planetas\n  const [planetPositions, setPlanetPositions] = useState([]);\n\n  // Função para calcular as posições absolutas dos planetas\n  const calculatePlanetPositions = useCallback(() => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const newPositions = PLANETS.map(planet => {\n      // Mapeia a posição relativa (0-1000) para a posição absoluta (pixels)\n      const x = planet.relativeX / 1000 * width;\n      const y = planet.relativeY / 1000 * height;\n      return {\n        ...planet,\n        x: x - ROCKET_SIZE / 2,\n        // Ajuste para centralizar o cálculo no centro do planeta\n        y: y - ROCKET_SIZE / 2\n      };\n    });\n    setPlanetPositions(newPositions);\n  }, []);\n\n  // 4. Lógica de movimento do foguete com o mouse\n  const handleMouseMove = useCallback(event => {\n    // Move o centro do foguete para a posição do mouse\n    setRocketPos({\n      x: event.clientX - ROCKET_SIZE / 2,\n      y: event.clientY - ROCKET_SIZE / 2\n    });\n  }, []);\n\n  // 5. Lógica de detecção de proximidade (clique)\n  const checkProximity = useCallback(() => {\n    // Centraliza o ponto de detecção do foguete\n    const rocketCenterX = rocketPos.x + ROCKET_SIZE / 2;\n    const rocketCenterY = rocketPos.y + ROCKET_SIZE / 2;\n    for (const planet of planetPositions) {\n      // Usa as coordenadas absolutas calculadas\n      const planetCenterX = planet.x + ROCKET_SIZE / 2;\n      const planetCenterY = planet.y + ROCKET_SIZE / 2;\n\n      // Fórmula da distância Euclidiana\n      const distance = Math.sqrt(Math.pow(planetCenterX - rocketCenterX, 2) + Math.pow(planetCenterY - rocketCenterY, 2));\n      if (distance < PROXIMITY_RADIUS) {\n        return planet; // Retorna o planeta que está próximo\n      }\n    }\n    return null;\n  }, [rocketPos, planetPositions]);\n\n  // 6. Lógica de clique para abrir a Modal\n  const handleSpaceClick = useCallback(() => {\n    const closePlanet = checkProximity();\n    if (closePlanet) {\n      setModalContent({\n        title: `Navegando para ${closePlanet.name}`,\n        body: `Você chegou ao planeta ${closePlanet.name}! Pronto para a aventura?`\n      });\n      setIsModalOpen(true);\n    }\n  }, [checkProximity]);\n  const closeModal = () => setIsModalOpen(false);\n  useEffect(() => {\n    // Chamada inicial e no resize para recalcular as posições dos planetas\n    calculatePlanetPositions();\n    window.addEventListener(\"resize\", calculatePlanetPositions);\n\n    // Adiciona o movimento do mouse\n    window.addEventListener(\"mousemove\", handleMouseMove);\n\n    // Adiciona o clique para interagir com o planeta\n    window.addEventListener(\"click\", handleSpaceClick);\n\n    // Remove os listeners na limpeza do efeito\n    return () => {\n      window.removeEventListener(\"resize\", calculatePlanetPositions);\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"click\", handleSpaceClick);\n    };\n  }, [calculatePlanetPositions, handleMouseMove, handleSpaceClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/fundo-espaco-noturno.jpg\",\n      alt: \"Fundo do espa\\xE7o\",\n      className: \"space-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/logo2 (1).svg\",\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), planetPositions.map(planet => /*#__PURE__*/_jsxDEV(Planet, {\n      src: planet.src,\n      alt: `Planeta ${planet.name}`,\n      x: planet.x,\n      y: planet.y\n    }, planet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Rocket, {\n      x: rocketPos.x,\n      y: rocketPos.y,\n      size: ROCKET_SIZE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      title: modalContent.title,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: modalContent.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n// Componente para renderizar os planetas\n_s(TelaNavegacao, \"skbeEG6IusDpBaqnu+HmH7b7Cuk=\");\n_c = TelaNavegacao;\nconst Planet = ({\n  src,\n  alt,\n  x,\n  y\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  src: src,\n  className: \"planet\",\n  style: {\n    left: `${x}px`,\n    top: `${y}px`\n  },\n  alt: alt\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 162,\n  columnNumber: 3\n}, this);\n\n// Componente para renderizar o foguete\n_c2 = Planet;\nconst Rocket = ({\n  x,\n  y,\n  size\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  src: \"/Nave_basica.png\",\n  className: \"rocket\",\n  style: {\n    left: `${x}px`,\n    top: `${y}px`,\n    width: `${size}px`,\n    height: `${size}px`\n  },\n  alt: \"Foguete\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 172,\n  columnNumber: 3\n}, this);\n_c3 = Rocket;\nexport default TelaNavegacao;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TelaNavegacao\");\n$RefreshReg$(_c2, \"Planet\");\n$RefreshReg$(_c3, \"Rocket\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Modal","jsxDEV","_jsxDEV","PLANETS","id","name","src","relativeX","relativeY","PROXIMITY_RADIUS","ROCKET_SIZE","TelaNavegacao","_s","rocketPos","setRocketPos","x","window","innerWidth","y","innerHeight","isModalOpen","setIsModalOpen","modalContent","setModalContent","planetPositions","setPlanetPositions","calculatePlanetPositions","width","height","newPositions","map","planet","handleMouseMove","event","clientX","clientY","checkProximity","rocketCenterX","rocketCenterY","planetCenterX","planetCenterY","distance","Math","sqrt","pow","handleSpaceClick","closePlanet","title","body","closeModal","addEventListener","removeEventListener","className","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","Planet","Rocket","size","isOpen","onClose","_c","style","left","top","_c2","_c3","$RefreshReg$"],"sources":["/home/madu/Documentos/spacead/src/Pages/NavegacaoFree/TelaNavegacao.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport \"./TelaNavegacao.css\";\nimport Modal from \"./Modal\"; // 1. Importa o componente Modal\n\n// 2. Definição dos planetas com coordenadas relativas (0 a 1000 para facilitar o posicionamento)\n// As coordenadas reais serão calculadas em tempo de execução\nconst PLANETS = [\n  { \n    id: 1, \n    name: \"Nebula Prime\", \n    src: \"/planetavermelho.png\", \n    // Posição relativa superior-esquerda: 10% da largura, 15% da altura\n    relativeX: 100, \n    relativeY: 150 \n  }, \n  { \n    id: 2, \n    name: \"Aetheria\", \n    src: \"/planetaclaro.png\", \n    // Posição relativa inferior-direita: 85% da largura, 80% da altura\n    relativeX: 850, \n    relativeY: 800 \n  },\n  // Você pode adicionar mais planetas aqui\n];\n\nconst PROXIMITY_RADIUS = 120; // Raio para considerar o clique/proximidade\n\n// Altura e Largura do foguete (para centralizar o cálculo)\nconst ROCKET_SIZE = 100;\n\nfunction TelaNavegacao() {\n  const [rocketPos, setRocketPos] = useState({\n    x: window.innerWidth / 2 - ROCKET_SIZE / 2,\n    y: window.innerHeight / 2 - ROCKET_SIZE / 2,\n  });\n  \n  // Estado para controlar a Modal\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState({});\n\n  // 3. Estado para armazenar as coordenadas absolutas dos planetas\n  const [planetPositions, setPlanetPositions] = useState([]);\n\n  // Função para calcular as posições absolutas dos planetas\n  const calculatePlanetPositions = useCallback(() => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    const newPositions = PLANETS.map(planet => {\n        // Mapeia a posição relativa (0-1000) para a posição absoluta (pixels)\n        const x = (planet.relativeX / 1000) * width;\n        const y = (planet.relativeY / 1000) * height;\n        return {\n            ...planet,\n            x: x - ROCKET_SIZE / 2, // Ajuste para centralizar o cálculo no centro do planeta\n            y: y - ROCKET_SIZE / 2,\n        };\n    });\n    setPlanetPositions(newPositions);\n  }, []);\n\n  // 4. Lógica de movimento do foguete com o mouse\n  const handleMouseMove = useCallback((event) => {\n    // Move o centro do foguete para a posição do mouse\n    setRocketPos({\n      x: event.clientX - ROCKET_SIZE / 2,\n      y: event.clientY - ROCKET_SIZE / 2,\n    });\n  }, []);\n\n  // 5. Lógica de detecção de proximidade (clique)\n  const checkProximity = useCallback(() => {\n    // Centraliza o ponto de detecção do foguete\n    const rocketCenterX = rocketPos.x + ROCKET_SIZE / 2;\n    const rocketCenterY = rocketPos.y + ROCKET_SIZE / 2;\n    \n    for (const planet of planetPositions) {\n      // Usa as coordenadas absolutas calculadas\n      const planetCenterX = planet.x + ROCKET_SIZE / 2;\n      const planetCenterY = planet.y + ROCKET_SIZE / 2;\n\n      // Fórmula da distância Euclidiana\n      const distance = Math.sqrt(\n        Math.pow(planetCenterX - rocketCenterX, 2) + Math.pow(planetCenterY - rocketCenterY, 2)\n      );\n\n      if (distance < PROXIMITY_RADIUS) {\n        return planet; // Retorna o planeta que está próximo\n      }\n    }\n    return null;\n  }, [rocketPos, planetPositions]);\n  \n  // 6. Lógica de clique para abrir a Modal\n  const handleSpaceClick = useCallback(() => {\n    const closePlanet = checkProximity();\n    if (closePlanet) {\n      setModalContent({\n        title: `Navegando para ${closePlanet.name}`,\n        body: `Você chegou ao planeta ${closePlanet.name}! Pronto para a aventura?`,\n      });\n      setIsModalOpen(true);\n    }\n  }, [checkProximity]);\n\n  const closeModal = () => setIsModalOpen(false);\n\n  useEffect(() => {\n    // Chamada inicial e no resize para recalcular as posições dos planetas\n    calculatePlanetPositions();\n    window.addEventListener(\"resize\", calculatePlanetPositions);\n    \n    // Adiciona o movimento do mouse\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    \n    // Adiciona o clique para interagir com o planeta\n    window.addEventListener(\"click\", handleSpaceClick);\n\n    // Remove os listeners na limpeza do efeito\n    return () => {\n      window.removeEventListener(\"resize\", calculatePlanetPositions);\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"click\", handleSpaceClick);\n    };\n  }, [calculatePlanetPositions, handleMouseMove, handleSpaceClick]);\n\n  return (\n    <div className=\"space-container\">\n      {/* Imagem de fundo e outros elementos */}\n      <img src=\"/fundo-espaco-noturno.jpg\" alt=\"Fundo do espaço\" className=\"space-background\" />\n      <img src=\"/logo2 (1).svg\" alt=\"Logo\" className=\"logo\" />\n      \n      {/* 7. Renderiza os planetas usando as posições calculadas */}\n      {planetPositions.map((planet) => (\n        <Planet \n          key={planet.id}\n          src={planet.src} \n          alt={`Planeta ${planet.name}`}\n          x={planet.x}\n          y={planet.y}\n        />\n      ))}\n      \n      {/* Renderiza o Foguete */}\n      <Rocket x={rocketPos.x} y={rocketPos.y} size={ROCKET_SIZE} />\n\n      {/* 8. Renderiza a Modal */}\n      <Modal \n        isOpen={isModalOpen} \n        onClose={closeModal} \n        title={modalContent.title}\n      >\n        <p>{modalContent.body}</p>\n      </Modal>\n    </div>\n  );\n}\n\n// Componente para renderizar os planetas\nconst Planet = ({ src, alt, x, y }) => (\n  <img\n    src={src}\n    className=\"planet\"\n    style={{ left: `${x}px`, top: `${y}px` }}\n    alt={alt}\n  />\n);\n\n// Componente para renderizar o foguete\nconst Rocket = ({ x, y, size }) => (\n  <img\n    src=\"/Nave_basica.png\"\n    className=\"rocket\"\n    style={{ left: `${x}px`, top: `${y}px`, width: `${size}px`, height: `${size}px` }}\n    alt=\"Foguete\"\n  />\n);\n\nexport default TelaNavegacao;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}