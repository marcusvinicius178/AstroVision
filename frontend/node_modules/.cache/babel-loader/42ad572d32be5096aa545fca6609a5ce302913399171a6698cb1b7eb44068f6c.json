{"ast":null,"code":"var _jsxFileName = \"/home/madu/Documentos/spacead/src/Pages/NavegacaoFree/TelaNavegacao.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\n\n// --- Dados dos Planetas (Coordenadas Fixas) ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLANETS = [\n// Posições em pixels (x, y) relativas ao canto superior esquerdo da tela\n{\n  id: 'kepler',\n  name: 'Kepler-164Bc',\n  x: 250,\n  y: 150,\n  color: 'purple'\n}, {\n  id: 'zylos',\n  name: 'Zylos-Prime',\n  x: 800,\n  y: 500,\n  color: 'orange'\n}];\nconst SPEED = 10; // Pixels por passo de movimento\nconst PROXIMITY_RADIUS = 100; // Raio em pixels para habilitar o pouso\n\n// ---------------------------------------------\n// Componente de Navegacao Principal (SpaceExplorer)\n// ---------------------------------------------\n\nfunction TelaNavegacao() {\n  _s();\n  const [rocketPos, setRocketPos] = useState({\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2\n  });\n  const [closePlanet, setClosePlanet] = useState(null); // Planeta mais próximo\n  const [currentView, setCurrentView] = useState('space'); // 'space' ou 'planetDetail'\n  const [landedPlanet, setLandedPlanet] = useState(null); // Planeta onde o foguete aterrissou\n\n  // --- Lógica de Checagem de Proximidade ---\n  const checkProximity = useCallback((rocketX, rocketY) => {\n    for (const planet of PLANETS) {\n      const distance = Math.sqrt(Math.pow(planet.x - rocketX, 2) + Math.pow(planet.y - rocketY, 2));\n      if (distance < PROXIMITY_RADIUS) {\n        return planet;\n      }\n    }\n    return null;\n  }, []);\n\n  // --- Lógica de Controle do Teclado ---\n  const handleKeyDown = useCallback(event => {\n    // Se estiver na tela de detalhes, só permite voltar\n    if (currentView === 'planetDetail') {\n      if (event.key === 'Escape' || event.key === 'r') {\n        setCurrentView('space');\n        setLandedPlanet(null);\n        setClosePlanet(null);\n      }\n      return;\n    }\n\n    // Lógica de movimento e pouso (apenas na vista 'space')\n    setRocketPos(currentPos => {\n      let newX = currentPos.x;\n      let newY = currentPos.y;\n      switch (event.key.toLowerCase()) {\n        case 'w':\n        case 'arrowup':\n          newY -= SPEED;\n          break;\n        case 's':\n        case 'arrowdown':\n          newY += SPEED;\n          break;\n        case 'a':\n        case 'arrowleft':\n          newX -= SPEED;\n          break;\n        case 'd':\n        case 'arrowright':\n          newX += SPEED;\n          break;\n        case 'e':\n          // Tenta pousar\n          const planetToLand = checkProximity(newX, newY);\n          if (planetToLand) {\n            setLandedPlanet(planetToLand);\n            setCurrentView('planetDetail');\n          }\n          break;\n        default:\n          return currentPos;\n      }\n\n      // Atualiza o estado de proximidade após o movimento\n      setClosePlanet(checkProximity(newX, newY));\n\n      // Retorna a nova posição\n      return {\n        x: newX,\n        y: newY\n      };\n    });\n  }, [currentView, checkProximity]);\n  useEffect(() => {\n    // Adiciona o listener quando o componente monta\n    window.addEventListener('keydown', handleKeyDown);\n\n    // Remove o listener quando o componente desmonta\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  // --- Renderização Condicional ---\n  if (currentView === 'planetDetail' && landedPlanet) {\n    return /*#__PURE__*/_jsxDEV(PlanetDetailScreen, {\n      planet: landedPlanet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Renderização do Espaço Sideral\n  return (\n    /*#__PURE__*/\n    // tabIndex={0} torna o div focalizável para receber eventos de teclado\n    _jsxDEV(\"div\", {\n      className: \"space-container\",\n      tabIndex: 0,\n      children: [/*#__PURE__*/_jsxDEV(Rocket, {\n        x: rocketPos.x,\n        y: rocketPos.y\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), PLANETS.map(planet => /*#__PURE__*/_jsxDEV(Planet, {\n        planet: planet,\n        isClose: closePlanet && closePlanet.id === planet.id\n      }, planet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(Controls, {\n        isClose: !!closePlanet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n// ---------------------------------------------\n// Componentes de Apresentação (Styling)\n// ---------------------------------------------\n\n// Placeholder para a tela de detalhes do planeta\n_s(TelaNavegacao, \"GdBJ+b2VY5UzjIJ88AKn+bkXAPU=\");\n_c = TelaNavegacao;\nconst PlanetDetailScreen = ({\n  planet\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"detail-screen\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Bem-vindo a \", planet.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Detalhes sobre a superf\\xEDcie e atmosfera...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"hint\",\n    children: \"Pressione ESC ou 'R' para retornar ao espa\\xE7o.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 124,\n  columnNumber: 3\n}, this);\n\n// Componente do Foguete\n_c2 = PlanetDetailScreen;\nconst Rocket = ({\n  x,\n  y\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"rocket\",\n  style: {\n    left: `${x}px`,\n    top: `${y}px`\n  },\n  children: \"\\uD83D\\uDE80\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 133,\n  columnNumber: 3\n}, this);\n\n// Componente do Planeta\n_c3 = Rocket;\nconst Planet = ({\n  planet,\n  isClose\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"planet\",\n  style: {\n    left: `${planet.x}px`,\n    top: `${planet.y}px`,\n    backgroundColor: planet.color\n  },\n  children: isClose && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tooltip\",\n    children: [planet.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tooltip-action\",\n      children: \"Press E to land\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 144,\n  columnNumber: 3\n}, this);\n\n// Componente de Controles\n_c4 = Planet;\nconst Controls = ({\n  isClose\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"controls\",\n  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Controls:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Use W/A/S/D or Arrow keys to move\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), isClose && /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Press E to land on a planet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }, this), !isClose && /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"Move close to a planet to land\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 160,\n  columnNumber: 5\n}, this);\n_c5 = Controls;\nexport default TelaNavegacao;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"TelaNavegacao\");\n$RefreshReg$(_c2, \"PlanetDetailScreen\");\n$RefreshReg$(_c3, \"Rocket\");\n$RefreshReg$(_c4, \"Planet\");\n$RefreshReg$(_c5, \"Controls\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","PLANETS","id","name","x","y","color","SPEED","PROXIMITY_RADIUS","TelaNavegacao","_s","rocketPos","setRocketPos","window","innerWidth","innerHeight","closePlanet","setClosePlanet","currentView","setCurrentView","landedPlanet","setLandedPlanet","checkProximity","rocketX","rocketY","planet","distance","Math","sqrt","pow","handleKeyDown","event","key","currentPos","newX","newY","toLowerCase","planetToLand","addEventListener","removeEventListener","PlanetDetailScreen","fileName","_jsxFileName","lineNumber","columnNumber","className","tabIndex","children","Rocket","map","Planet","isClose","Controls","_c","_c2","style","left","top","_c3","backgroundColor","_c4","_c5","$RefreshReg$"],"sources":["/home/madu/Documentos/spacead/src/Pages/NavegacaoFree/TelaNavegacao.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\n// --- Dados dos Planetas (Coordenadas Fixas) ---\nconst PLANETS = [\n  // Posições em pixels (x, y) relativas ao canto superior esquerdo da tela\n  { id: 'kepler', name: 'Kepler-164Bc', x: 250, y: 150, color: 'purple' },\n  { id: 'zylos', name: 'Zylos-Prime', x: 800, y: 500, color: 'orange' },\n];\n\nconst SPEED = 10;          // Pixels por passo de movimento\nconst PROXIMITY_RADIUS = 100; // Raio em pixels para habilitar o pouso\n\n// ---------------------------------------------\n// Componente de Navegacao Principal (SpaceExplorer)\n// ---------------------------------------------\n\nfunction TelaNavegacao() {\n  const [rocketPos, setRocketPos] = useState({ x: window.innerWidth / 2, y: window.innerHeight / 2 });\n  const [closePlanet, setClosePlanet] = useState(null); // Planeta mais próximo\n  const [currentView, setCurrentView] = useState('space'); // 'space' ou 'planetDetail'\n  const [landedPlanet, setLandedPlanet] = useState(null); // Planeta onde o foguete aterrissou\n\n  // --- Lógica de Checagem de Proximidade ---\n  const checkProximity = useCallback((rocketX, rocketY) => {\n    for (const planet of PLANETS) {\n      const distance = Math.sqrt(\n        Math.pow(planet.x - rocketX, 2) + Math.pow(planet.y - rocketY, 2)\n      );\n      if (distance < PROXIMITY_RADIUS) {\n        return planet;\n      }\n    }\n    return null;\n  }, []);\n\n  // --- Lógica de Controle do Teclado ---\n  const handleKeyDown = useCallback((event) => {\n    \n    // Se estiver na tela de detalhes, só permite voltar\n    if (currentView === 'planetDetail') {\n      if (event.key === 'Escape' || event.key === 'r') {\n        setCurrentView('space');\n        setLandedPlanet(null);\n        setClosePlanet(null);\n      }\n      return;\n    }\n\n    // Lógica de movimento e pouso (apenas na vista 'space')\n    setRocketPos(currentPos => {\n      let newX = currentPos.x;\n      let newY = currentPos.y;\n\n      switch (event.key.toLowerCase()) {\n        case 'w':\n        case 'arrowup': newY -= SPEED; break;\n        case 's':\n        case 'arrowdown': newY += SPEED; break;\n        case 'a':\n        case 'arrowleft': newX -= SPEED; break;\n        case 'd':\n        case 'arrowright': newX += SPEED; break;\n        \n        case 'e': // Tenta pousar\n          const planetToLand = checkProximity(newX, newY);\n          if (planetToLand) {\n            setLandedPlanet(planetToLand);\n            setCurrentView('planetDetail');\n          }\n          break;\n        default:\n          return currentPos;\n      }\n\n      // Atualiza o estado de proximidade após o movimento\n      setClosePlanet(checkProximity(newX, newY));\n      \n      // Retorna a nova posição\n      return { x: newX, y: newY };\n    });\n  }, [currentView, checkProximity]);\n\n  useEffect(() => {\n    // Adiciona o listener quando o componente monta\n    window.addEventListener('keydown', handleKeyDown);\n\n    // Remove o listener quando o componente desmonta\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n\n  // --- Renderização Condicional ---\n  if (currentView === 'planetDetail' && landedPlanet) {\n    return <PlanetDetailScreen planet={landedPlanet} />;\n  }\n  \n  // Renderização do Espaço Sideral\n  return (\n    // tabIndex={0} torna o div focalizável para receber eventos de teclado\n    <div className=\"space-container\" tabIndex={0}>\n      <Rocket x={rocketPos.x} y={rocketPos.y} />\n\n      {PLANETS.map(planet => (\n        <Planet\n          key={planet.id}\n          planet={planet}\n          isClose={closePlanet && closePlanet.id === planet.id}\n        />\n      ))}\n\n      <Controls isClose={!!closePlanet} />\n    </div>\n  );\n}\n\n// ---------------------------------------------\n// Componentes de Apresentação (Styling)\n// ---------------------------------------------\n\n// Placeholder para a tela de detalhes do planeta\nconst PlanetDetailScreen = ({ planet }) => (\n  <div className=\"detail-screen\">\n    <h1>Bem-vindo a {planet.name}</h1>\n    <p>Detalhes sobre a superfície e atmosfera...</p>\n    <p className=\"hint\">Pressione ESC ou 'R' para retornar ao espaço.</p>\n  </div>\n);\n\n// Componente do Foguete\nconst Rocket = ({ x, y }) => (\n  <div \n    className=\"rocket\"\n    style={{ left: `${x}px`, top: `${y}px` }}\n  >\n     {/* Ícone ou imagem do foguete */}\n     🚀\n  </div>\n);\n\n// Componente do Planeta\nconst Planet = ({ planet, isClose }) => (\n  <div \n    className=\"planet\"\n    style={{ left: `${planet.x}px`, top: `${planet.y}px`, backgroundColor: planet.color }}\n  >\n    {isClose && (\n      <div className=\"tooltip\">\n        {planet.name}\n        <br/>\n        <span className=\"tooltip-action\">Press E to land</span>\n      </div>\n    )}\n  </div>\n);\n\n// Componente de Controles\nconst Controls = ({ isClose }) => (\n    <div className=\"controls\">\n        <p>Controls:</p>\n        <ul>\n            <li>Use W/A/S/D or Arrow keys to move</li>\n            {isClose && <li>Press E to land on a planet</li>}\n            {!isClose && <li>Move close to a planet to land</li>}\n        </ul>\n    </div>\n);\n\nexport default TelaNavegacao;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}