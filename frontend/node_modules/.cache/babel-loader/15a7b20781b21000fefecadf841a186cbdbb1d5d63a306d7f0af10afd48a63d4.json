{"ast":null,"code":"var _jsxFileName = \"/home/madu/Documentos/spacead/src/Pages/NavegacaoFree/TelaNavegacao.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./TelaNavegacao.css\";\nimport Modal from \"./Modal\";\nimport ModalDois from \"./ModalDois\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PLANETS = [{\n  id: 1,\n  name: \"Nebula Prime\",\n  src: \"/planetavermelho.png\",\n  relativeX: 100,\n  relativeY: 150\n}, {\n  id: 2,\n  name: \"Aetheria\",\n  // planetaclaro\n  src: \"/planetaclaro.png\",\n  relativeX: 850,\n  relativeY: 800\n}];\nconst PROXIMITY_RADIUS = 120;\nconst ROCKET_SIZE = 100;\nconst ReturnButton = () => /*#__PURE__*/_jsxDEV(Link, {\n  to: \"../Menu/MenuPrincipal\",\n  className: \"returnButton\",\n  children: \"Return to mission\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 3\n}, this);\n\n/*hook*/\n_c = ReturnButton;\nfunction TelaNavegacao() {\n  _s();\n  const navigate = useNavigate();\n  const [rocketPos, setRocketPos] = useState({\n    x: window.innerWidth / 2 - ROCKET_SIZE / 2,\n    y: window.innerHeight / 2 - ROCKET_SIZE / 2\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalContent, setModalContent] = useState({});\n  const [isModalDoisOpen, setIsModalDoisOpen] = useState(false);\n  const [planetPositions, setPlanetPositions] = useState([]);\n  const calculatePlanetPositions = useCallback(() => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const newPositions = PLANETS.map(planet => {\n      const x = planet.relativeX / 1000 * width;\n      const y = planet.relativeY / 1000 * height;\n      return {\n        ...planet,\n        x: x - ROCKET_SIZE / 2,\n        y: y - ROCKET_SIZE / 2\n      };\n    });\n    setPlanetPositions(newPositions);\n  }, []);\n  const handleMouseMove = useCallback(event => {\n    setRocketPos({\n      x: event.clientX - ROCKET_SIZE / 2,\n      y: event.clientY - ROCKET_SIZE / 2\n    });\n  }, []);\n  const checkProximity = useCallback(() => {\n    const rocketCenterX = rocketPos.x + ROCKET_SIZE / 2;\n    const rocketCenterY = rocketPos.y + ROCKET_SIZE / 2;\n    for (const planet of planetPositions) {\n      const planetCenterX = planet.x + ROCKET_SIZE / 2;\n      const planetCenterY = planet.y + ROCKET_SIZE / 2;\n      const distance = Math.sqrt(Math.pow(planetCenterX - rocketCenterX, 2) + Math.pow(planetCenterY - rocketCenterY, 2));\n      if (distance < PROXIMITY_RADIUS) {\n        return planet;\n      }\n    }\n    return null;\n  }, [rocketPos, planetPositions]);\n  const openModalDois = planet => {\n    if (planet.name === \"Aetheria\") {\n      setIsModalDoisOpen(true);\n    }\n  };\n  const handleSpaceClick = useCallback(event => {\n    if (event.target.className.includes(\"return-button\") || event.target.className.includes(\"logo\")) {\n      return;\n    }\n    const closePlanet = checkProximity();\n    if (closePlanet) {\n      if (closePlanet.name === \"Aetheria\") {\n        openModalDois(closePlanet);\n      } else {\n        setModalContent({\n          title: `Navegando para ${closePlanet.name}`,\n          body: `Você chegou ao planeta ${closePlanet.name}! Pronto para a aventura?`\n        });\n        setIsModalOpen(true);\n      }\n    }\n  }, [checkProximity]);\n  const closeModal = () => setIsModalOpen(false);\n  const closeModalDois = () => setIsModalDoisOpen(false);\n  const handleReturn = () => {\n    navigate(\"/\");\n  };\n  useEffect(() => {\n    calculatePlanetPositions();\n    const handleMouseMoveEvent = event => {\n      setRocketPos({\n        x: event.clientX - ROCKET_SIZE / 2,\n        y: event.clientY - ROCKET_SIZE / 2\n      });\n    };\n    const handleClickEvent = event => {\n      if (event.target.className.includes(\"return-button\") || event.target.className.includes(\"logo\")) {\n        return;\n      }\n      const rocketCenterX = rocketPos.x + ROCKET_SIZE / 2;\n      const rocketCenterY = rocketPos.y + ROCKET_SIZE / 2;\n      const closePlanet = planetPositions.find(planet => {\n        const planetCenterX = planet.x + ROCKET_SIZE / 2;\n        const planetCenterY = planet.y + ROCKET_SIZE / 2;\n        const distance = Math.sqrt(Math.pow(planetCenterX - rocketCenterX, 2) + Math.pow(planetCenterY - rocketCenterY, 2));\n        return distance < PROXIMITY_RADIUS;\n      });\n      if (closePlanet) {\n        if (closePlanet.name === \"Aetheria\") {\n          setIsModalDoisOpen(true);\n        } else {\n          setModalContent({\n            title: `Navegando para ${closePlanet.name}`,\n            body: `Você chegou ao planeta ${closePlanet.name}! Pronto para a aventura?`\n          });\n          setIsModalOpen(true);\n        }\n      }\n    };\n    window.addEventListener(\"resize\", calculatePlanetPositions);\n    window.addEventListener(\"mousemove\", handleMouseMoveEvent);\n    window.addEventListener(\"click\", handleClickEvent);\n    return () => {\n      window.removeEventListener(\"resize\", calculatePlanetPositions);\n      window.removeEventListener(\"mousemove\", handleMouseMoveEvent);\n      window.removeEventListener(\"click\", handleClickEvent);\n    };\n  }, [calculatePlanetPositions, rocketPos, planetPositions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/fundo-espaco-noturno.jpg\",\n      alt: \"Fundo do espa\\xE7o\",\n      className: \"space-background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-ui\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo2 (1).svg\",\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReturnButton, {\n        onClick: handleReturn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), planetPositions.map(planet => /*#__PURE__*/_jsxDEV(Planet, {\n      src: planet.src,\n      alt: `Planeta ${planet.name}`,\n      x: planet.x,\n      y: planet.y\n    }, planet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Rocket, {\n      x: rocketPos.x,\n      y: rocketPos.y,\n      size: ROCKET_SIZE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      title: modalContent.title,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: modalContent.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalDois, {\n      isOpen: isModalDoisOpen,\n      onClose: closeModalDois\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(TelaNavegacao, \"yOOH4BcOSWuRH22djxTKyYOm4rQ=\", false, function () {\n  return [useNavigate];\n});\n_c2 = TelaNavegacao;\nconst Planet = ({\n  src,\n  alt,\n  x,\n  y\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  src: src,\n  className: \"planet\",\n  style: {\n    left: `${x}px`,\n    top: `${y}px`\n  },\n  alt: alt\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 210,\n  columnNumber: 3\n}, this);\n_c3 = Planet;\nconst Rocket = ({\n  x,\n  y,\n  size\n}) => /*#__PURE__*/_jsxDEV(\"img\", {\n  src: \"/Nave_basica.png\",\n  className: \"rocket\",\n  style: {\n    left: `${x}px`,\n    top: `${y}px`,\n    width: `${size}px`,\n    height: `${size}px`\n  },\n  alt: \"Foguete\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 219,\n  columnNumber: 3\n}, this);\n_c4 = Rocket;\nexport default TelaNavegacao;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ReturnButton\");\n$RefreshReg$(_c2, \"TelaNavegacao\");\n$RefreshReg$(_c3, \"Planet\");\n$RefreshReg$(_c4, \"Rocket\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","Modal","ModalDois","Link","jsxDEV","_jsxDEV","PLANETS","id","name","src","relativeX","relativeY","PROXIMITY_RADIUS","ROCKET_SIZE","ReturnButton","to","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","TelaNavegacao","_s","navigate","rocketPos","setRocketPos","x","window","innerWidth","y","innerHeight","isModalOpen","setIsModalOpen","modalContent","setModalContent","isModalDoisOpen","setIsModalDoisOpen","planetPositions","setPlanetPositions","calculatePlanetPositions","width","height","newPositions","map","planet","handleMouseMove","event","clientX","clientY","checkProximity","rocketCenterX","rocketCenterY","planetCenterX","planetCenterY","distance","Math","sqrt","pow","openModalDois","handleSpaceClick","target","includes","closePlanet","title","body","closeModal","closeModalDois","handleReturn","handleMouseMoveEvent","handleClickEvent","find","addEventListener","removeEventListener","alt","onClick","Planet","Rocket","size","isOpen","onClose","_c2","style","left","top","_c3","_c4","$RefreshReg$"],"sources":["/home/madu/Documentos/spacead/src/Pages/NavegacaoFree/TelaNavegacao.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\"\nimport { useNavigate } from \"react-router-dom\";\nimport \"./TelaNavegacao.css\"\nimport Modal from \"./Modal\"\nimport ModalDois from \"./ModalDois\"\nimport { Link } from 'react-router-dom';\n\nconst PLANETS = [\n  { \n    id: 1, \n    name: \"Nebula Prime\", \n    src: \"/planetavermelho.png\", \n    relativeX: 100, \n    relativeY: 150 \n  }, \n  { \n    id: 2, \n    name: \"Aetheria\", // planetaclaro\n    src: \"/planetaclaro.png\", \n    relativeX: 850, \n    relativeY: 800 \n  },\n]\n\nconst PROXIMITY_RADIUS = 120; \nconst ROCKET_SIZE = 100;\n\nconst ReturnButton = () => (\n  <Link to=\"../Menu/MenuPrincipal\" className=\"returnButton\">\n    Return to mission\n  </Link>\n)\n\n/*hook*/\nfunction TelaNavegacao() {\n  const navigate = useNavigate();\n  const [rocketPos, setRocketPos] = useState({\n    x: window.innerWidth / 2 - ROCKET_SIZE / 2,\n    y: window.innerHeight / 2 - ROCKET_SIZE / 2,\n  })\n\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [modalContent, setModalContent] = useState({})\n  const [isModalDoisOpen, setIsModalDoisOpen] = useState(false)\n  const [planetPositions, setPlanetPositions] = useState([])\n\n  const calculatePlanetPositions = useCallback(() => {\n    const width = window.innerWidth;\n    const height = window.innerHeight\n\n    const newPositions = PLANETS.map(planet => {\n      const x = (planet.relativeX / 1000) * width;\n      const y = (planet.relativeY / 1000) * height;\n      return {\n        ...planet,\n        x: x - ROCKET_SIZE / 2, \n        y: y - ROCKET_SIZE / 2,\n      }\n    })\n\n    setPlanetPositions(newPositions);\n  }, []);\n\n  const handleMouseMove = useCallback((event) => {\n    setRocketPos({\n      x: event.clientX - ROCKET_SIZE / 2,\n      y: event.clientY - ROCKET_SIZE / 2,\n    });\n  }, []);\n\n  const checkProximity = useCallback(() => {\n    const rocketCenterX = rocketPos.x + ROCKET_SIZE / 2;\n    const rocketCenterY = rocketPos.y + ROCKET_SIZE / 2;\n\n    for (const planet of planetPositions) {\n      const planetCenterX = planet.x + ROCKET_SIZE / 2;\n      const planetCenterY = planet.y + ROCKET_SIZE / 2;\n\n      const distance = Math.sqrt(\n        Math.pow(planetCenterX - rocketCenterX, 2) + Math.pow(planetCenterY - rocketCenterY, 2)\n      );\n\n      if (distance < PROXIMITY_RADIUS) {\n        return planet;\n      }\n    }\n\n    return null;\n  }, [rocketPos, planetPositions]);\n\n  const openModalDois = (planet) => {\n    if (planet.name === \"Aetheria\") {\n      setIsModalDoisOpen(true);\n    }\n  };\n\n  const handleSpaceClick = useCallback((event) => {\n    if (event.target.className.includes(\"return-button\") || event.target.className.includes(\"logo\")) {\n      return;\n    }\n\n    const closePlanet = checkProximity();\n    if (closePlanet) {\n      if (closePlanet.name === \"Aetheria\") {\n        openModalDois(closePlanet);\n      } else {\n        setModalContent({\n          title: `Navegando para ${closePlanet.name}`,\n          body: `Você chegou ao planeta ${closePlanet.name}! Pronto para a aventura?`,\n        });\n        setIsModalOpen(true);\n      }\n    }\n  }, [checkProximity]);\n\n  const closeModal = () => setIsModalOpen(false);\n  const closeModalDois = () => setIsModalDoisOpen(false);\n\n  const handleReturn = () => {\n    navigate(\"/\")\n  };\n\n  useEffect(() => {\n  calculatePlanetPositions();\n\n  const handleMouseMoveEvent = (event) => {\n    setRocketPos({\n      x: event.clientX - ROCKET_SIZE / 2,\n      y: event.clientY - ROCKET_SIZE / 2,\n    });\n  };\n\n  const handleClickEvent = (event) => {\n    if (event.target.className.includes(\"return-button\") || event.target.className.includes(\"logo\")) {\n      return;\n    }\n\n    const rocketCenterX = rocketPos.x + ROCKET_SIZE / 2;\n    const rocketCenterY = rocketPos.y + ROCKET_SIZE / 2;\n\n    const closePlanet = planetPositions.find(planet => {\n      const planetCenterX = planet.x + ROCKET_SIZE / 2;\n      const planetCenterY = planet.y + ROCKET_SIZE / 2;\n      const distance = Math.sqrt(Math.pow(planetCenterX - rocketCenterX, 2) + Math.pow(planetCenterY - rocketCenterY, 2));\n      return distance < PROXIMITY_RADIUS;\n    });\n\n    if (closePlanet) {\n      if (closePlanet.name === \"Aetheria\") {\n        setIsModalDoisOpen(true);\n      } else {\n        setModalContent({\n          title: `Navegando para ${closePlanet.name}`,\n          body: `Você chegou ao planeta ${closePlanet.name}! Pronto para a aventura?`,\n        });\n        setIsModalOpen(true);\n      }\n    }\n  };\n\n    window.addEventListener(\"resize\", calculatePlanetPositions);\n    window.addEventListener(\"mousemove\", handleMouseMoveEvent);\n    window.addEventListener(\"click\", handleClickEvent);\n\n    return () => {\n      window.removeEventListener(\"resize\", calculatePlanetPositions);\n      window.removeEventListener(\"mousemove\", handleMouseMoveEvent);\n      window.removeEventListener(\"click\", handleClickEvent);\n    };\n  }, [calculatePlanetPositions, rocketPos, planetPositions]);\n\n  return (\n    <div className=\"space-container\">\n      <img src=\"/fundo-espaco-noturno.jpg\" alt=\"Fundo do espaço\" className=\"space-background\" />\n\n      <div className=\"top-ui\">\n        <img src=\"/logo2 (1).svg\" alt=\"Logo\" className=\"logo\" />\n        <ReturnButton onClick={handleReturn} />\n      </div>\n\n      {planetPositions.map((planet) => (\n        <Planet \n          key={planet.id}\n          src={planet.src} \n          alt={`Planeta ${planet.name}`}\n          x={planet.x}\n          y={planet.y}\n        />\n      ))}\n\n      <Rocket x={rocketPos.x} y={rocketPos.y} size={ROCKET_SIZE} />\n\n      <Modal \n        isOpen={isModalOpen} \n        onClose={closeModal} \n        title={modalContent.title}\n      >\n        <p>{modalContent.body}</p>\n      </Modal>\n\n      <ModalDois \n        isOpen={isModalDoisOpen} \n        onClose={closeModalDois} \n      />\n    </div>\n  );\n}\n\nconst Planet = ({ src, alt, x, y }) => (\n  <img\n    src={src}\n    className=\"planet\"\n    style={{ left: `${x}px`, top: `${y}px` }}\n    alt={alt}\n  />\n);\n\nconst Rocket = ({ x, y, size }) => (\n  <img\n    src=\"/Nave_basica.png\"\n    className=\"rocket\"\n    style={{ left: `${x}px`, top: `${y}px`, width: `${size}px`, height: `${size}px` }}\n    alt=\"Foguete\"\n  />\n);\n\nexport default TelaNavegacao;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,qBAAqB;AAC5B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAG,CACd;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,cAAc;EACpBC,GAAG,EAAE,sBAAsB;EAC3BC,SAAS,EAAE,GAAG;EACdC,SAAS,EAAE;AACb,CAAC,EACD;EACEJ,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,UAAU;EAAE;EAClBC,GAAG,EAAE,mBAAmB;EACxBC,SAAS,EAAE,GAAG;EACdC,SAAS,EAAE;AACb,CAAC,CACF;AAED,MAAMC,gBAAgB,GAAG,GAAG;AAC5B,MAAMC,WAAW,GAAG,GAAG;AAEvB,MAAMC,YAAY,GAAGA,CAAA,kBACnBT,OAAA,CAACF,IAAI;EAACY,EAAE,EAAC,uBAAuB;EAACC,SAAS,EAAC,cAAc;EAAAC,QAAA,EAAC;AAE1D;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAM,CACP;;AAED;AAAAC,EAAA,GANMR,YAAY;AAOlB,SAASS,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGzB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG9B,QAAQ,CAAC;IACzC+B,CAAC,EAAEC,MAAM,CAACC,UAAU,GAAG,CAAC,GAAGjB,WAAW,GAAG,CAAC;IAC1CkB,CAAC,EAAEF,MAAM,CAACG,WAAW,GAAG,CAAC,GAAGnB,WAAW,GAAG;EAC5C,CAAC,CAAC;EAEF,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsC,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAACwC,eAAe,EAAEC,kBAAkB,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC0C,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAM4C,wBAAwB,GAAG1C,WAAW,CAAC,MAAM;IACjD,MAAM2C,KAAK,GAAGb,MAAM,CAACC,UAAU;IAC/B,MAAMa,MAAM,GAAGd,MAAM,CAACG,WAAW;IAEjC,MAAMY,YAAY,GAAGtC,OAAO,CAACuC,GAAG,CAACC,MAAM,IAAI;MACzC,MAAMlB,CAAC,GAAIkB,MAAM,CAACpC,SAAS,GAAG,IAAI,GAAIgC,KAAK;MAC3C,MAAMX,CAAC,GAAIe,MAAM,CAACnC,SAAS,GAAG,IAAI,GAAIgC,MAAM;MAC5C,OAAO;QACL,GAAGG,MAAM;QACTlB,CAAC,EAAEA,CAAC,GAAGf,WAAW,GAAG,CAAC;QACtBkB,CAAC,EAAEA,CAAC,GAAGlB,WAAW,GAAG;MACvB,CAAC;IACH,CAAC,CAAC;IAEF2B,kBAAkB,CAACI,YAAY,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGhD,WAAW,CAAEiD,KAAK,IAAK;IAC7CrB,YAAY,CAAC;MACXC,CAAC,EAAEoB,KAAK,CAACC,OAAO,GAAGpC,WAAW,GAAG,CAAC;MAClCkB,CAAC,EAAEiB,KAAK,CAACE,OAAO,GAAGrC,WAAW,GAAG;IACnC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMsC,cAAc,GAAGpD,WAAW,CAAC,MAAM;IACvC,MAAMqD,aAAa,GAAG1B,SAAS,CAACE,CAAC,GAAGf,WAAW,GAAG,CAAC;IACnD,MAAMwC,aAAa,GAAG3B,SAAS,CAACK,CAAC,GAAGlB,WAAW,GAAG,CAAC;IAEnD,KAAK,MAAMiC,MAAM,IAAIP,eAAe,EAAE;MACpC,MAAMe,aAAa,GAAGR,MAAM,CAAClB,CAAC,GAAGf,WAAW,GAAG,CAAC;MAChD,MAAM0C,aAAa,GAAGT,MAAM,CAACf,CAAC,GAAGlB,WAAW,GAAG,CAAC;MAEhD,MAAM2C,QAAQ,GAAGC,IAAI,CAACC,IAAI,CACxBD,IAAI,CAACE,GAAG,CAACL,aAAa,GAAGF,aAAa,EAAE,CAAC,CAAC,GAAGK,IAAI,CAACE,GAAG,CAACJ,aAAa,GAAGF,aAAa,EAAE,CAAC,CACxF,CAAC;MAED,IAAIG,QAAQ,GAAG5C,gBAAgB,EAAE;QAC/B,OAAOkC,MAAM;MACf;IACF;IAEA,OAAO,IAAI;EACb,CAAC,EAAE,CAACpB,SAAS,EAAEa,eAAe,CAAC,CAAC;EAEhC,MAAMqB,aAAa,GAAId,MAAM,IAAK;IAChC,IAAIA,MAAM,CAACtC,IAAI,KAAK,UAAU,EAAE;MAC9B8B,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC;EAED,MAAMuB,gBAAgB,GAAG9D,WAAW,CAAEiD,KAAK,IAAK;IAC9C,IAAIA,KAAK,CAACc,MAAM,CAAC9C,SAAS,CAAC+C,QAAQ,CAAC,eAAe,CAAC,IAAIf,KAAK,CAACc,MAAM,CAAC9C,SAAS,CAAC+C,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC/F;IACF;IAEA,MAAMC,WAAW,GAAGb,cAAc,CAAC,CAAC;IACpC,IAAIa,WAAW,EAAE;MACf,IAAIA,WAAW,CAACxD,IAAI,KAAK,UAAU,EAAE;QACnCoD,aAAa,CAACI,WAAW,CAAC;MAC5B,CAAC,MAAM;QACL5B,eAAe,CAAC;UACd6B,KAAK,EAAE,kBAAkBD,WAAW,CAACxD,IAAI,EAAE;UAC3C0D,IAAI,EAAE,0BAA0BF,WAAW,CAACxD,IAAI;QAClD,CAAC,CAAC;QACF0B,cAAc,CAAC,IAAI,CAAC;MACtB;IACF;EACF,CAAC,EAAE,CAACiB,cAAc,CAAC,CAAC;EAEpB,MAAMgB,UAAU,GAAGA,CAAA,KAAMjC,cAAc,CAAC,KAAK,CAAC;EAC9C,MAAMkC,cAAc,GAAGA,CAAA,KAAM9B,kBAAkB,CAAC,KAAK,CAAC;EAEtD,MAAM+B,YAAY,GAAGA,CAAA,KAAM;IACzB5C,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED3B,SAAS,CAAC,MAAM;IAChB2C,wBAAwB,CAAC,CAAC;IAE1B,MAAM6B,oBAAoB,GAAItB,KAAK,IAAK;MACtCrB,YAAY,CAAC;QACXC,CAAC,EAAEoB,KAAK,CAACC,OAAO,GAAGpC,WAAW,GAAG,CAAC;QAClCkB,CAAC,EAAEiB,KAAK,CAACE,OAAO,GAAGrC,WAAW,GAAG;MACnC,CAAC,CAAC;IACJ,CAAC;IAED,MAAM0D,gBAAgB,GAAIvB,KAAK,IAAK;MAClC,IAAIA,KAAK,CAACc,MAAM,CAAC9C,SAAS,CAAC+C,QAAQ,CAAC,eAAe,CAAC,IAAIf,KAAK,CAACc,MAAM,CAAC9C,SAAS,CAAC+C,QAAQ,CAAC,MAAM,CAAC,EAAE;QAC/F;MACF;MAEA,MAAMX,aAAa,GAAG1B,SAAS,CAACE,CAAC,GAAGf,WAAW,GAAG,CAAC;MACnD,MAAMwC,aAAa,GAAG3B,SAAS,CAACK,CAAC,GAAGlB,WAAW,GAAG,CAAC;MAEnD,MAAMmD,WAAW,GAAGzB,eAAe,CAACiC,IAAI,CAAC1B,MAAM,IAAI;QACjD,MAAMQ,aAAa,GAAGR,MAAM,CAAClB,CAAC,GAAGf,WAAW,GAAG,CAAC;QAChD,MAAM0C,aAAa,GAAGT,MAAM,CAACf,CAAC,GAAGlB,WAAW,GAAG,CAAC;QAChD,MAAM2C,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,GAAG,CAACL,aAAa,GAAGF,aAAa,EAAE,CAAC,CAAC,GAAGK,IAAI,CAACE,GAAG,CAACJ,aAAa,GAAGF,aAAa,EAAE,CAAC,CAAC,CAAC;QACnH,OAAOG,QAAQ,GAAG5C,gBAAgB;MACpC,CAAC,CAAC;MAEF,IAAIoD,WAAW,EAAE;QACf,IAAIA,WAAW,CAACxD,IAAI,KAAK,UAAU,EAAE;UACnC8B,kBAAkB,CAAC,IAAI,CAAC;QAC1B,CAAC,MAAM;UACLF,eAAe,CAAC;YACd6B,KAAK,EAAE,kBAAkBD,WAAW,CAACxD,IAAI,EAAE;YAC3C0D,IAAI,EAAE,0BAA0BF,WAAW,CAACxD,IAAI;UAClD,CAAC,CAAC;UACF0B,cAAc,CAAC,IAAI,CAAC;QACtB;MACF;IACF,CAAC;IAECL,MAAM,CAAC4C,gBAAgB,CAAC,QAAQ,EAAEhC,wBAAwB,CAAC;IAC3DZ,MAAM,CAAC4C,gBAAgB,CAAC,WAAW,EAAEH,oBAAoB,CAAC;IAC1DzC,MAAM,CAAC4C,gBAAgB,CAAC,OAAO,EAAEF,gBAAgB,CAAC;IAElD,OAAO,MAAM;MACX1C,MAAM,CAAC6C,mBAAmB,CAAC,QAAQ,EAAEjC,wBAAwB,CAAC;MAC9DZ,MAAM,CAAC6C,mBAAmB,CAAC,WAAW,EAAEJ,oBAAoB,CAAC;MAC7DzC,MAAM,CAAC6C,mBAAmB,CAAC,OAAO,EAAEH,gBAAgB,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAAC9B,wBAAwB,EAAEf,SAAS,EAAEa,eAAe,CAAC,CAAC;EAE1D,oBACElC,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BZ,OAAA;MAAKI,GAAG,EAAC,2BAA2B;MAACkE,GAAG,EAAC,oBAAiB;MAAC3D,SAAS,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE1FhB,OAAA;MAAKW,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBZ,OAAA;QAAKI,GAAG,EAAC,gBAAgB;QAACkE,GAAG,EAAC,MAAM;QAAC3D,SAAS,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxDhB,OAAA,CAACS,YAAY;QAAC8D,OAAO,EAAEP;MAAa;QAAAnD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EAELkB,eAAe,CAACM,GAAG,CAAEC,MAAM,iBAC1BzC,OAAA,CAACwE,MAAM;MAELpE,GAAG,EAAEqC,MAAM,CAACrC,GAAI;MAChBkE,GAAG,EAAE,WAAW7B,MAAM,CAACtC,IAAI,EAAG;MAC9BoB,CAAC,EAAEkB,MAAM,CAAClB,CAAE;MACZG,CAAC,EAAEe,MAAM,CAACf;IAAE,GAJPe,MAAM,CAACvC,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKf,CACF,CAAC,eAEFhB,OAAA,CAACyE,MAAM;MAAClD,CAAC,EAAEF,SAAS,CAACE,CAAE;MAACG,CAAC,EAAEL,SAAS,CAACK,CAAE;MAACgD,IAAI,EAAElE;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE7DhB,OAAA,CAACJ,KAAK;MACJ+E,MAAM,EAAE/C,WAAY;MACpBgD,OAAO,EAAEd,UAAW;MACpBF,KAAK,EAAE9B,YAAY,CAAC8B,KAAM;MAAAhD,QAAA,eAE1BZ,OAAA;QAAAY,QAAA,EAAIkB,YAAY,CAAC+B;MAAI;QAAAhD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAERhB,OAAA,CAACH,SAAS;MACR8E,MAAM,EAAE3C,eAAgB;MACxB4C,OAAO,EAAEb;IAAe;MAAAlD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACG,EAAA,CA5KQD,aAAa;EAAA,QACHvB,WAAW;AAAA;AAAAkF,GAAA,GADrB3D,aAAa;AA8KtB,MAAMsD,MAAM,GAAGA,CAAC;EAAEpE,GAAG;EAAEkE,GAAG;EAAE/C,CAAC;EAAEG;AAAE,CAAC,kBAChC1B,OAAA;EACEI,GAAG,EAAEA,GAAI;EACTO,SAAS,EAAC,QAAQ;EAClBmE,KAAK,EAAE;IAAEC,IAAI,EAAE,GAAGxD,CAAC,IAAI;IAAEyD,GAAG,EAAE,GAAGtD,CAAC;EAAK,CAAE;EACzC4C,GAAG,EAAEA;AAAI;EAAAzD,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACV,CACF;AAACiE,GAAA,GAPIT,MAAM;AASZ,MAAMC,MAAM,GAAGA,CAAC;EAAElD,CAAC;EAAEG,CAAC;EAAEgD;AAAK,CAAC,kBAC5B1E,OAAA;EACEI,GAAG,EAAC,kBAAkB;EACtBO,SAAS,EAAC,QAAQ;EAClBmE,KAAK,EAAE;IAAEC,IAAI,EAAE,GAAGxD,CAAC,IAAI;IAAEyD,GAAG,EAAE,GAAGtD,CAAC,IAAI;IAAEW,KAAK,EAAE,GAAGqC,IAAI,IAAI;IAAEpC,MAAM,EAAE,GAAGoC,IAAI;EAAK,CAAE;EAClFJ,GAAG,EAAC;AAAS;EAAAzD,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACd,CACF;AAACkE,GAAA,GAPIT,MAAM;AASZ,eAAevD,aAAa;AAAC,IAAAD,EAAA,EAAA4D,GAAA,EAAAI,GAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAlE,EAAA;AAAAkE,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAF,GAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}